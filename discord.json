{
    "appid": "2fc257c2-84e4-4fbd-824d-0fe1693bb734",
    "name": "discord",
    "description": "Integrate with Discord to post messages and attachments to channels",
    "contributors": [
        {
            "name": "Kacper Czernik"
        },
        {
            "name": "Katarzyna Zuchowska"
        }
    ],
    "type": "information",
    "product_vendor": "Discord",
    "logo": "discord.svg",
    "logo_dark": "discord_dark.svg",
    "product_name": "Discord",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "discord",
    "license": "Copyright (c) Discord, 2024",
    "app_version": "1.1.0",
    "utctime_updated": "2024-08-16T13:44:54.747356Z",
    "package_name": "phantom_discord",
    "main_module": "discord_connector.py",
    "min_phantom_version": "6.2.2.134",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "token": {
            "description": "Discord bot token",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "",
            "order": 0,
            "name": "token",
            "id": 0
        },
        "guild_id": {
            "description": "server/guild id",
            "data_type": "numeric",
            "required": false,
            "value_list": [],
            "default": "",
            "order": 1,
            "name": "guild_id",
            "id": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Tests authorization with Discord",
            "verbose": "Checks that the provided bot token is valid.",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list guilds",
            "identifier": "list_guilds",
            "description": "List guilds of a Discord bot is a member of",
            "verbose": "The output of this action is a list of all guilds (servers) a Discord bot is a member of. The guilds will be listed with their corresponding guild IDs.",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.*.id",
                    "data_type": "string",
                    "column_name": "Guild ID",
                    "column_order": 1,
                    "contains": [
                        "discord guild id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.name",
                    "data_type": "string",
                    "column_name": "Guild name",
                    "column_order": 1,
                    "contains": [
                        "discord guild name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.icon",
                    "data_type": "string",
                    "contains": [
                        "icon"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.owner",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.baner",
                    "data_type": "string",
                    "contains": [
                        "baner"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.permissions",
                    "data_type": "string",
                    "contains": [
                        "permissions"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "width": 12,
                "title": "List Guilds",
                "type": "table",
                "height": 5
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list channels",
            "identifier": "list_channels",
            "description": "List Channels of a specific guild",
            "verbose": "The output of this action is a list of all channels of a specific guild. The channels will be listed with their corresponding channel IDs.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "guild_id": {
                    "description": "guilds id",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "guild_id"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.guild_id",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data.*.*.id",
                    "data_type": "string",
                    "column_name": "Channel ID",
                    "column_order": 1,
                    "contains": [
                        "discord channel id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.*.name",
                    "data_type": "string",
                    "column_name": "Channel name",
                    "column_order": 1,
                    "contains": [
                        "discord channel name"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "fetch message",
            "identifier": "fetch_message",
            "description": "gets information about the message, such as: attachments, embeds, content, author, creation and edition date, it also shows jump url to the fetched message",
            "verbose": "",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "channel_id": {
                    "description": "channel id",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "channel_id"
                },
                "message_id": {
                    "description": "message id",
                    "data_type": "string",
                    "required": true,
                    "primary": false,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "message_id"
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.message origin.channel id",
                    "data_type": "numeric",
                    "contains": [
                        "channel id"
                    ],
                    "column_name": "channel id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.message origin.channel name",
                    "data_type": "string",
                    "contains": [
                        "channel name"
                    ],
                    "column_name": "channel name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.message data.created at",
                    "data_type": "numeric",
                    "contains": [
                        "date"
                    ],
                    "column_name": "message creation date",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.message data.edited at",
                    "data_type": "numeric",
                    "contains": [
                        "date"
                    ],
                    "column_name": "message edition date",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.author data.author id",
                    "data_type": "numeric",
                    "contains": [
                        "author id"
                    ],
                    "column_name": "author id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.author data.author name",
                    "data_type": "string",
                    "contains": [
                        "author name"
                    ],
                    "column_name": "author name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.attachments",
                    "data_type": "string",
                    "contains": [
                        "artifact id"
                    ],
                    "column_name": "list of attachments",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.embeds",
                    "data_type": "string",
                    "contains": [
                        "artifact id"
                    ],
                    "column_name": "list of embeds",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.content",
                    "data_type": "string",
                    "contains": [
                        "message content"
                    ],
                    "column_name": "content",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.jump url",
                    "data_type": "string",
                    "contains": [
                        "url"
                    ],
                    "column_name": "jump url",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.flags",
                    "data_type": "string",
                    "contains": [
                        "flags"
                    ],
                    "column_name": "message flags",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete message",
            "identifier": "delete_message",
            "description": "removes the message",
            "verbose": "",
            "type": "correct",
            "read_only": false,
            "parameters": {
                "channel_id": {
                    "description": "channel id",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 0,
                    "name": "channel_id"
                },
                "message_id": {
                    "description": "message id",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "value_list": [],
                    "default": "",
                    "order": 1,
                    "name": "message_id"
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.channel_id",
                    "data_type": "numeric",
                    "contains": [],
                    "column_name": "channel_id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.message_id",
                    "data_type": "numeric",
                    "contains": [],
                    "column_name": "message_id",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip3_dependencies": {
        "pypi": [
            {
                "module": "discord"
            }
        ]
    },
    "copied_from_id": 227,
    "copied_from_version": "1.0.0",
    "directory": "discord",
    "version": 1,
    "appname": "-",
    "executable": "spawn3",
    "disabled": false,
    "custom_made": true
}